<?xml version="1.0" encoding="UTF-8"?>

<project name="deasciifier" basedir="." default="help">

  <property file="build.properties"/>

  <target name="clean">
    <delete dir="${output.dir}" />
  </target>

  <!--==========================================================================
    Cleanup deasciifier JavaScript output files, create directories etc
  ===========================================================================-->
  <target name="build-deasciifier-js-init">
    <!-- Create output directories -->
    <mkdir dir="${output.dir}" />
    <mkdir dir="${output.dir}/js" />
    <mkdir dir="${output.dir}/js/gen" />

    <!-- Log directory for Closure Compiler output -->
    <mkdir dir="${logs.dir}" />

  </target>

  <!--==========================================================================
    Compile deasciifier patterns from an array into a dictionary.
  ===========================================================================-->
  <target name="generate-patterns-file"
      depends="build-deasciifier-js-init">
    <!-- Pattern Version 2 -->
    <exec
        executable="python3"
        dir="${basedir}"
        failonerror="true"
        failifexecutionfails="true">
      <!-- Compilation script -->
      <arg value="${basedir}/src/util/compile_patterns.py"/>

      <!-- Source patterns (input) -->
      <arg value="${basedir}/src/js/lib/patterns/patterns.json"/>

      <!-- Pattern template (input) -->
      <arg value="${basedir}/src/js/lib/patterns/template.js"/>

      <!-- Compiled patterns (output) -->
      <arg value="${output.dir}/js/gen/_generated_patterns_v2.js"/>
    </exec>
  </target>

  <!--==========================================================================
    Read chrome extension version from manifest.json file
  ===========================================================================-->
  <target name="read-chromeextension-version">
    <exec
        executable="python3"
        dir="${basedir}"
        failonerror="true"
        failifexecutionfails="true"
        outputproperty="chrome.extension.version">

      <arg value="src/util/chrome_extension_version.py"/>

      <arg value="${basedir}/src/chrome_extension/manifest.json"/>
    </exec>
    <property name="chrome.extension.output"
        value="${output.dir.release}/chrome_extension_${chrome.extension.version}.zip"/>
    <echo> CHROME EXTENSION VERSION: ${chrome.extension.version}</echo>
    <echo> CHROME EXTENSION OUTPUT : ${chrome.extension.output}</echo>
  </target>

  <!--==========================================================================
    Build deasciifier JavaScript library by concatenating files
  ===========================================================================-->
  <target name="build-deasciifier-js-debug"
      depends="build-deasciifier-js-init, generate-patterns-file">
    <mkdir dir="${output.dir.debug}" />

    <echo message="Building deasciifier JS by concatenating files"/>
    <concat destfile="${deasciifier.js.lib.debug}" append="false"
        encoding="UTF-8" outputencoding="UTF-8">
      <filelist dir="${basedir}">
        <file name="src/js/lib/base.js"/>
        <file name="src/js/lib/deasciifier.js"/>
        <file name="src/js/lib/turkish_encoder.js"/>
      </filelist>

      <filterchain>
        <!-- Delete BOM characters -->
        <deletecharacters chars="&#xFEFF;"/>
      </filterchain>
    </concat>

    <!-- Copy patterns from Release build. -->
    <copy file="${deasciifier.js.patterns.release}"
        tofile="${deasciifier.js.patterns.debug}"
        failonerror="true"/>
    <echo message="DONE"/>
  </target>

  <!--==========================================================================
    Build deasciifier JavaScript library using Closure Compiler
  ===========================================================================-->
  <target name="build-deasciifier-js-release"
      depends="build-deasciifier-js-init, generate-patterns-file">
    <mkdir dir="${output.dir.release}" />

    <echo message="Building deasciifier JS using Closure Compiler..."/>
    <exec
        executable="java"
        dir="${basedir}"
        failonerror="true"
        failifexecutionfails="true"
        append="true"
        output="${logs.dir}/build.log"
        logError="true">

      <arg value="-jar"/>
      <arg value="${closurecompiler.path}"/>

      <arg value="--module_resolution" />
      <arg value="NODE"/>

      <arg value="--process_common_js_modules" />
      <arg value="--common_js_entry_module" />
      <arg value="src/js/lib/cc_exports/deasciifier_exports.js" />

      <!-- Turkish char list -->
      <arg value="--js"/>
      <arg value="src/js/lib/base.js"/>

      <!-- Ascii/Deasciifier -->
      <arg value="--js"/>
      <arg value="src/js/lib/deasciifier.js"/>

      <!-- Closure Compiler exports for Ascii/Deasciifier -->
      <arg value="--js"/>
      <arg value="src/js/lib/cc_exports/deasciifier_exports.js"/>

      <!-- JS/HTML Encoder -->
      <arg value="--js"/>
      <arg value="src/js/lib/turkish_encoder.js"/>

      <arg value="--js"/>
      <arg value="src/js/lib/cc_exports/turkish_encoder_exports.js"/>

      <!-- Full output file -->
      <arg value="--js_output_file"/>
      <arg value="${deasciifier.js.lib.release}"/>

      <!-- Compilation level -->
      <arg value="--compilation_level"/>
      <arg value="${closurecompiler.compileLevel}"/>

      <!-- Warning level -->
      <arg value="--warning_level"/>
      <arg value="${closurecompiler.warningLevel}"/>

      <!-- Output wrapper -->
      <arg value="--output_wrapper"/>
      <arg value="(function(){%output%})();"/>
    </exec>

    <echo message="Building deasciifier patterns using Closure Compiler..."/>
    <exec
        executable="java"
        dir="${basedir}"
        failonerror="true"
        failifexecutionfails="true"
        append="true"
        output="${logs.dir}/build.log"
        logError="true">

      <arg value="-jar"/>
      <arg value="${closurecompiler.path}"/>

      <arg value="--module_resolution" />
      <arg value="NODE"/>

      <arg value="--process_common_js_modules" />
      <arg value="--common_js_entry_module" />
      <arg value="src/js/lib/cc_exports/patterns_exports.js" />

      <!-- Generated pattern list (input) -->
      <arg value="--js"/>
      <arg value="${output.dir}/js/gen/_generated_patterns_v2.js"/>

      <!-- Closure Compiler exports for patterns -->
      <arg value="--js"/>
      <arg value="src/js/lib/cc_exports/patterns_exports.js"/>

      <!-- Compiled patterns (output) -->
      <arg value="--js_output_file"/>
      <arg value="${deasciifier.js.patterns.release}"/>

      <!-- Compilation level -->
      <arg value="--compilation_level"/>
      <arg value="${closurecompiler.compileLevel}"/>

      <!-- Warning level -->
      <arg value="--warning_level"/>
      <arg value="${closurecompiler.warningLevel}"/>

      <!-- Output wrapper -->
      <arg value="--output_wrapper"/>
      <arg value="(function(){%output%})();"/>
    </exec>
    <echo message="DONE"/>
  </target>

  <!--==========================================================================
    Builds deasciifier JavaScript code using either concatenation or Closure
    Compiler
  ===========================================================================-->
  <target name="build-deasciifier-js">
    <condition
        property="build-deasciifier-js-targetname"
        value="build-deasciifier-js-debug"
        else="build-deasciifier-js-release">
      <!-- If config.name==Debug, will call js-debug, otherwise it will be js-release -->
      <equals arg1="${config.name}" arg2="Debug"/>
    </condition>
    <antcall target="${build-deasciifier-js-targetname}" />
  </target>

  <!--==========================================================================
    Builds Chrome extension
  ===========================================================================-->
  <target name="build-chrome-extension"
      depends="build-deasciifier-js, read-chromeextension-version">

    <echo message="Building Chrome Extension at ${chrome.extension.dir} (no debug version)"/>
    <delete dir="${chrome.extension.dir}" />
    <mkdir dir="${chrome.extension.dir}/lib"/>

    <copy todir="${chrome.extension.dir}">
      <fileset dir="${basedir}/src/chrome_extension" includes="*" />
    </copy>

    <!-- Copy compiled deasciifier JS -->
    <copy todir="${chrome.extension.dir}/lib"
        file="${deasciifier.js.lib.release}" />

    <!-- Copy compiled patterns -->
    <copy todir="${chrome.extension.dir}/lib"
        file="${deasciifier.js.patterns.release}" />

    <!-- Html deasciifier -->
    <copy todir="${chrome.extension.dir}/lib"
        file="src/js/utils/html_deasciifier.js" />

    <!-- Html decoder -->
    <copy todir="${chrome.extension.dir}/lib"
        file="src/js/utils/html_decoder.js" />

    <!-- Text helper -->
    <copy todir="${chrome.extension.dir}/lib"
        file="src/js/utils/text_helper.js" />

    <!-- Copy icons -->
    <copy todir="${chrome.extension.dir}"
      file="resources/icon-16.png"/>
    <copy todir="${chrome.extension.dir}"
      file="resources/icon-32.png"/>
    <copy todir="${chrome.extension.dir}"
      file="resources/icon-48.png"/>
    <copy todir="${chrome.extension.dir}"
      file="resources/icon-64.png"/>
    <copy todir="${chrome.extension.dir}"
      file="resources/icon-128.png"/>

    <echo message="DONE"/>
  </target>

  <!--==========================================================================
    Builds Firefox extension
  ===========================================================================-->
  <target name="build-firefox-extension"
      depends="build-deasciifier-js, read-chromeextension-version">

    <echo message="Building Firefox Extension at ${firefox.extension.dir} (no debug version)"/>
    <delete dir="${firefox.extension.dir}" />
    <mkdir dir="${firefox.extension.dir}/lib"/>

    <copy todir="${firefox.extension.dir}">
      <fileset dir="${basedir}/src/firefox_extension" includes="*" />
    </copy>

    <!-- Copy compiled deasciifier JS -->
    <copy todir="${firefox.extension.dir}/lib"
        file="${deasciifier.js.lib.release}" />

    <!-- Copy compiled patterns -->
    <copy todir="${firefox.extension.dir}/lib"
        file="${deasciifier.js.patterns.release}" />

    <!-- Html deasciifier -->
    <!-- <copy todir="${firefox.extension.dir}/lib"
        file="src/js/utils/html_deasciifier.js" /> -->

    <!-- Html decoder -->
    <!-- <copy todir="${firefox.extension.dir}/lib"
        file="src/js/utils/html_decoder.js" /> -->

    <!-- Text helper -->
    <copy todir="${firefox.extension.dir}/lib"
        file="src/js/utils/text_helper.js" />

    <!-- Copy icons -->
    <copy todir="${firefox.extension.dir}"
      file="resources/icon-16.png"/>
    <copy todir="${firefox.extension.dir}"
      file="resources/icon-32.png"/>
    <copy todir="${firefox.extension.dir}"
      file="resources/icon-48.png"/>
    <copy todir="${firefox.extension.dir}"
      file="resources/icon-64.png"/>
    <copy todir="${firefox.extension.dir}"
      file="resources/icon-128.png"/>

    <echo message="DONE"/>
  </target>

  <!--==========================================================================
    Builds Safari extension
  ===========================================================================-->
  <target name="build-safari-extension" depends="build-deasciifier-js">
    <echo message="Building Safari Extension at ${safari.extension.dir} (no debug version)"/>
    <mkdir dir="${safari.extension.dir}/lib"/>
    <!-- Copy compiled deasciifier JS and patterns -->
    <copy todir="${safari.extension.dir}/lib"
        file="${deasciifier.js.lib.release}" />
    <copy todir="${safari.extension.dir}/lib"
        file="${deasciifier.js.patterns.release}" />
    <echo message="DONE"/>
  </target>

  <!--==========================================================================
      Build Appengine website
  ==========================================================================-->
  <target name="build-website" depends="build-deasciifier-js">
    <echo message="Deploying deasciifier JS code to the website"/>

    <!-- Patterns file -->
    <echo>Copy deasciifier.patterns.js</echo>
    <copy file="${deasciifier.js.patterns.release}"
        tofile="${website.local.jsdir}/generated_patterns_${website.releaseDate}.js"
        failonerror="true"/>
  </target>

<!--==========================================================================
    Run tests.
  ===========================================================================-->
  <target name="test" depends="build-all">
    <exec
        executable="npm"
        dir="${basedir}/src/js/"
        failonerror="true"
        failifexecutionfails="true">
      <arg value="install-test"/>
    </exec>
  </target>

  <!--==========================================================================
    Builds all targets
  ===========================================================================-->
  <target name="build-all"
    depends="build-deasciifier-js-init, build-deasciifier-js, build-chrome-extension,
    build-firefox-extension, build-safari-extension, build-website">
  </target>

  <target name="help">
    <echo>
      clean                          : Cleans output files.
      generate-patterns-file         : Generates patterns file.

      build-deasciifier-js-debug     : Builds deasciifier JS code by concatenating files.
      build-deasciifier-js-release   : Builds deasciifier JS code using Closure Compiler.
      build-deasciifier-js           : Builds debug or release deasciifier based on the value of |config.name|.

      build-chrome-extension         : Builds the Chrome Extension.
      build-firefox-extension        : Builds the Firefox Extension.
      build-safari-extension         : Builds the Safari Extension.

      build-website                  : Builds Appengine website.

      build-all                      : Builds all targets.
      test                           : Runs tests.
    </echo>
  </target>

</project>
